function fetchSubscription(subscription){
  fetch("/subscribe", {
    method: "POST",
    headers: { 'Content-Type' : 'application/json'},
    body: JSON.stringify(subscription)
  }).then(function(response) {
    if(response.ok) {
      console.log("Registro de token exitoso");
    } else {
      console.warn("Error al registrar el token, puede que ya exista en la DB: ", response);
    }
  }).catch(function(err) {
    console.log("No se pudo realizar la peticion: ", err);
  });
}
function dropSubscription(subscription) {
  fetch("/subscribe", {
    method: "DELETE",
    headers: { 'Content-Type' : 'application/json'},
    body: JSON.stringify(subscription)
  }).then(function(response) {
    if(response.ok) {
      console.log("Eliminacion de token exitoso");
    } else {
      console.warn("Error al borrar el token: ", response);
    }
  }).catch(function(err) {
    console.log("No se pudo realizar la peticion: ", err);
  });
}

function createFirebaseSubscription(){
  messaging.requestPermission().then(function() {
    messaging.getToken().then(function(currentToken) {
    if (currentToken) {
      const currentTokenKey = { auth_key: currentToken }
      fetchSubscription(currentTokenKey);
    } else {
      // Show permission request.
      console.log('No Instance ID token available. Request permission to generate one.');
    }
    }).catch(function(err) {
      console.log('An error occurred while retrieving token. ', err);
    });
  }).catch(function(err) {
    console.log('Unable to get permission to notify.', err);
  });
}

function deleteFirebaseSubscription(){
  messaging.getToken().then(function(currentToken) {
  if (currentToken) {
    const currentTokenKey = { auth_key: currentToken }
    console.log(currentTokenKey);
    dropSubscription(currentTokenKey);
  } else {
    // Show permission request.
    console.log('No Instance ID token available. Request permission to generate one.');
  }
  }).catch(function(err) {
    console.log('An error occurred while retrieving token. ', err);
  });
}
