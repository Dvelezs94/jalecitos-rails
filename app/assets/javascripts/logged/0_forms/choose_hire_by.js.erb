$(document).on('turbolinks:load', function() {
  displayHireByInputs();
  $(".hire_by").change(displayHireInput);
});

function displayHireByInputs() {
  inputs = $(".hire_by"); //get all checkbox inputs
  $.each(inputs, function( index, inp ) {
    the_id = inp.id;
    container = $("[display_id="+the_id+"]")
    if ( $(inp).prop('checked') ) { //if checked, remove class hidden of its corresponding area
      container.removeClass("hidden");
    }
    else {
      container.find(":input").prop( "disabled", true ); //disable hidden inputs
      container.find(":input").attr("pack_validate", "false"); //mark as unused so package validation doesnt use it
      container.find(":input").val(""); //empty the price value of the hidden container
    }
  });
}

function displayHireInput () {
  the_id = this.id;

  max_amount = $(this).closest(".form-block").find(".max_amount"); //get the quantity input
  if ( max_amount.is(":visible") ) { //i am changing from unit to service...
    max_amount.attr("old_val", max_amount.val()); //save old value
    max_amount.val(""); // remove its val
  }
  else { //changing from service to unit
    max_amount.val(max_amount.attr("old_val")); //restore the old value
  }

  old_block = $(this).closest(".form-block").find("[display_id]:visible");
  old_block.addClass("hidden"); //hide the visible block
  old_block.find(":input").prop( "disabled", true ); //disable the old inputs
  old_block.find(":input").attr("pack_validate", "false"); // mark inputs for no validation

  new_block = $("[display_id="+the_id+"]");
  new_block.removeClass("hidden"); //show the hidden block
  new_block.find(":input").prop( "disabled", false ); //enable the new inputs
  new_block.find(":input").attr("pack_validate", "true"); // mark inputs for validation
}
